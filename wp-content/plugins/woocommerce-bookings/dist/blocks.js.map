{"version":3,"file":"blocks.js","mappings":"mBAAA,MAAM,6CAA+BA,OAAW,GAAoB,iBCA9D,uCAA+BA,OAAW,GAAc,WCAxD,iCAA+BA,OAAW,GAAQ,KCAlD,kCAA+BA,OAAW,GAAS,MCAnD,+BAA+BA,OAAc,MCA7C,yCAA+BA,OAAW,GAAgB,aCU1DC,UAAWC,EAAAA,uCAAAA,YAAY,2BAA4B,CAAC,GACpDC,OAAQC,EAAAA,yCAAAA,gBAAgBH,SAASI,OACjCC,iBAAkBF,EAAAA,yCAAAA,gBAAgBH,SAASM,mBAK3CC,QAAUA,KACRJ,EAAAA,yCAAAA,gBAAgBH,SAASQ,aAAe,IA6BhD,mBAb8B,CAC7BC,KA1B2B,sBA2B3BC,SAASC,EAAAA,+BAAAA,eAACJ,QAAO,MACjBL,OAAOS,EAAAA,+BAAAA,gBAXQC,QACf,MAAM,oBAAyBA,MAAMC,WACrC,OAAOF,EAAAA,+BAAAA,eAACG,mBAAkB,CAACC,KAAOb,OAAU,GAS/B,MACbc,MAAML,EAAAA,+BAAAA,eAACJ,QAAO,MACdU,eAAgBA,KAAM,EACtBC,UAAWhB,MACXiB,SAAU,CACTC,SAAUpB,SAASmB,UAEpBE,sBAAuBhB,iBC/BlBL,yBAAWC,EAAAA,uCAAAA,YAAY,2BAA4B,CAAC,IACpD,mBAAwBqB,GAAGC,cAEjCC,EAAAA,6CAAAA,uBAAuBC,oBAElBzB,wBAAS0B,aAEbC,EAAAA,kCAAAA,WACC,iEACA,gCACA,KAAMC,EAAAA,iCAAAA,UAAUC,mBAAoBC,iCAAkC,wB","sources":["webpack://woocommerce-bookings/external window [\"wc\",\"wcBlocksRegistry\"]","webpack://woocommerce-bookings/external window [\"wc\",\"wcSettings\"]","webpack://woocommerce-bookings/external window [\"wp\",\"data\"]","webpack://woocommerce-bookings/external window [\"wp\",\"hooks\"]","webpack://woocommerce-bookings/external window \"React\"","webpack://woocommerce-bookings/external window [\"wp\",\"htmlEntities\"]","webpack://woocommerce-bookings/./src/payment-method/check-availability/index.js","webpack://woocommerce-bookings/./src/payment-method/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wc\"][\"wcBlocksRegistry\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wc\"][\"wcSettings\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","/**\n * External dependencies\n */\nimport { getSetting } from '@woocommerce/settings';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nconst PAYMENT_METHOD_NAME = 'wc-bookings-gateway';\nconst settings = getSetting( 'wc-bookings-gateway_data', {} );\nconst label = decodeEntities( settings.title );\nconst orderButtonText = decodeEntities( settings.order_button_text );\n\n/**\n * Content component\n */\nconst Content = () => {\n\treturn decodeEntities( settings.description || '' );\n};\n\n/**\n * Label component\n *\n * @param {*} props Props from payment API.\n */\nconst Label = ( props ) => {\n\tconst { PaymentMethodLabel } = props.components;\n\treturn <PaymentMethodLabel text={ label } />;\n};\n\n/**\n * Bookings payment method config object.\n */\nconst bookingsPaymentMethod = {\n\tname: PAYMENT_METHOD_NAME,\n\tcontent: <Content />,\n\tlabel: <Label />,\n\tedit: <Content />,\n\tcanMakePayment: () => true,\n\tariaLabel: label,\n\tsupports: {\n\t\tfeatures: settings.supports,\n\t},\n\tplaceOrderButtonLabel: orderButtonText,\n};\n\nexport default bookingsPaymentMethod;\n","/**\n * External dependencies\n */\nimport { registerPaymentMethod } from '@woocommerce/blocks-registry';\nimport { getSetting } from '@woocommerce/settings';\nimport { dispatch } from '@wordpress/data';\nimport { addAction } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport bookingsPaymentMethod from './check-availability';\n\nconst settings = getSetting( 'wc-bookings-gateway_data', {} );\nconst { PAYMENT_STORE_KEY } = wc.wcBlocksData;\n\nregisterPaymentMethod( bookingsPaymentMethod );\n\nif ( settings.is_enabled ) {\n\t// Set the payment method as active when the checkout form is rendered.\n\taddAction(\n\t\t'experimental__woocommerce_blocks-checkout-render-checkout-form',\n\t\t'woocommerce-bookings-gateway',\n\t\t() => dispatch( PAYMENT_STORE_KEY ).__internalSetActivePaymentMethod( 'wc-bookings-gateway' )\n\t);\n}\n"],"names":["window","settings","getSetting","label","decodeEntities","title","orderButtonText","order_button_text","Content","description","name","content","createElement","props","components","PaymentMethodLabel","text","edit","canMakePayment","ariaLabel","supports","features","placeOrderButtonLabel","wc","wcBlocksData","registerPaymentMethod","bookingsPaymentMethod","is_enabled","addAction","dispatch","PAYMENT_STORE_KEY","__internalSetActivePaymentMethod"],"sourceRoot":""}